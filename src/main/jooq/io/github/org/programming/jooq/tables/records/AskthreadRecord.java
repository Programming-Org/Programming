/*
 * This file is generated by jOOQ.
 */
package io.github.org.programming.jooq.tables.records;


import io.github.org.programming.jooq.tables.Askthread;
import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;

import java.time.Instant;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AskthreadRecord extends TableRecordImpl<AskthreadRecord> implements Record4<String, String, Integer, Instant> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.askthread.member_id</code>.
     */
    public AskthreadRecord setMemberId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.askthread.member_id</code>.
     */
    public String getMemberId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.askthread.guild_id</code>.
     */
    public AskthreadRecord setGuildId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.askthread.guild_id</code>.
     */
    public String getGuildId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.askthread.amount</code>.
     */
    public AskthreadRecord setAmount(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.askthread.amount</code>.
     */
    public Integer getAmount() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.askthread.time_stamp</code>.
     */
    public AskthreadRecord setTimeStamp(Instant value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.askthread.time_stamp</code>.
     */
    public Instant getTimeStamp() {
        return (Instant) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, Integer, Instant> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, Integer, Instant> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Askthread.ASKTHREAD.MEMBER_ID;
    }

    @Override
    public Field<String> field2() {
        return Askthread.ASKTHREAD.GUILD_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Askthread.ASKTHREAD.AMOUNT;
    }

    @Override
    public Field<Instant> field4() {
        return Askthread.ASKTHREAD.TIME_STAMP;
    }

    @Override
    public String component1() {
        return getMemberId();
    }

    @Override
    public String component2() {
        return getGuildId();
    }

    @Override
    public Integer component3() {
        return getAmount();
    }

    @Override
    public Instant component4() {
        return getTimeStamp();
    }

    @Override
    public String value1() {
        return getMemberId();
    }

    @Override
    public String value2() {
        return getGuildId();
    }

    @Override
    public Integer value3() {
        return getAmount();
    }

    @Override
    public Instant value4() {
        return getTimeStamp();
    }

    @Override
    public AskthreadRecord value1(String value) {
        setMemberId(value);
        return this;
    }

    @Override
    public AskthreadRecord value2(String value) {
        setGuildId(value);
        return this;
    }

    @Override
    public AskthreadRecord value3(Integer value) {
        setAmount(value);
        return this;
    }

    @Override
    public AskthreadRecord value4(Instant value) {
        setTimeStamp(value);
        return this;
    }

    @Override
    public AskthreadRecord values(String value1, String value2, Integer value3, Instant value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AskthreadRecord
     */
    public AskthreadRecord() {
        super(Askthread.ASKTHREAD);
    }

    /**
     * Create a detached, initialised AskthreadRecord
     */
    public AskthreadRecord(String memberId, String guildId, Integer amount, Instant timeStamp) {
        super(Askthread.ASKTHREAD);

        setMemberId(memberId);
        setGuildId(guildId);
        setAmount(amount);
        setTimeStamp(timeStamp);
    }

    /**
     * Create a detached, initialised AskthreadRecord
     */
    public AskthreadRecord(io.github.org.programming.jooq.tables.pojos.Askthread value) {
        super(Askthread.ASKTHREAD);

        if (value != null) {
            setMemberId(value.getMemberId());
            setGuildId(value.getGuildId());
            setAmount(value.getAmount());
            setTimeStamp(value.getTimeStamp());
        }
    }
}
