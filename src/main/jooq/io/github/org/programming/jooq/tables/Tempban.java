/*
 * This file is generated by jOOQ.
 */
package io.github.org.programming.jooq.tables;


import io.github.org.programming.jooq.Keys;
import io.github.org.programming.jooq.Public;
import io.github.org.programming.jooq.tables.records.TempbanRecord;
import org.jooq.Record;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.DayToSecond;

import java.time.Instant;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tempban extends TableImpl<TempbanRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.tempban</code>
     */
    public static final Tempban TEMPBAN = new Tempban();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TempbanRecord> getRecordType() {
        return TempbanRecord.class;
    }

    /**
     * The column <code>public.tempban.id</code>.
     */
    public final TableField<TempbanRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.tempban.guild_id</code>.
     */
    public final TableField<TempbanRecord, String> GUILD_ID = createField(DSL.name("guild_id"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.tempban.user_id</code>.
     */
    public final TableField<TempbanRecord, String> USER_ID = createField(DSL.name("user_id"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.tempban.moderator_id</code>.
     */
    public final TableField<TempbanRecord, String> MODERATOR_ID = createField(DSL.name("moderator_id"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.tempban.duration</code>.
     */
    public final TableField<TempbanRecord, DayToSecond> DURATION = createField(DSL.name("duration"), SQLDataType.INTERVALDAYTOSECOND.nullable(false), this, "");

    /**
     * The column <code>public.tempban.start</code>.
     */
    public final TableField<TempbanRecord, Instant> START = createField(DSL.name("start"), SQLDataType.INSTANT.nullable(false), this, "");

    /**
     * The column <code>public.tempban.reason</code>.
     */
    public final TableField<TempbanRecord, String> REASON = createField(DSL.name("reason"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    private Tempban(Name alias, Table<TempbanRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tempban(Name alias, Table<TempbanRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.tempban</code> table reference
     */
    public Tempban(String alias) {
        this(DSL.name(alias), TEMPBAN);
    }

    /**
     * Create an aliased <code>public.tempban</code> table reference
     */
    public Tempban(Name alias) {
        this(alias, TEMPBAN);
    }

    /**
     * Create a <code>public.tempban</code> table reference
     */
    public Tempban() {
        this(DSL.name("tempban"), null);
    }

    public <O extends Record> Tempban(Table<O> child, ForeignKey<O, TempbanRecord> key) {
        super(child, key, TEMPBAN);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<TempbanRecord, Integer> getIdentity() {
        return (Identity<TempbanRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<TempbanRecord> getPrimaryKey() {
        return Keys.TEMPBAN_PKEY;
    }

    @Override
    public Tempban as(String alias) {
        return new Tempban(DSL.name(alias), this);
    }

    @Override
    public Tempban as(Name alias) {
        return new Tempban(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tempban rename(String name) {
        return new Tempban(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tempban rename(Name name) {
        return new Tempban(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, DayToSecond, Instant, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
