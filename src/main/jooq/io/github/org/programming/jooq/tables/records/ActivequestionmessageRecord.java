/*
 * This file is generated by jOOQ.
 */
package io.github.org.programming.jooq.tables.records;


import io.github.org.programming.jooq.tables.Activequestionmessage;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivequestionmessageRecord extends TableRecordImpl<ActivequestionmessageRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.activequestionmessage.guild_id</code>.
     */
    public ActivequestionmessageRecord setGuildId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.activequestionmessage.guild_id</code>.
     */
    public String getGuildId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.activequestionmessage.message_id</code>.
     */
    public ActivequestionmessageRecord setMessageId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.activequestionmessage.message_id</code>.
     */
    public String getMessageId() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Activequestionmessage.ACTIVEQUESTIONMESSAGE.GUILD_ID;
    }

    @Override
    public Field<String> field2() {
        return Activequestionmessage.ACTIVEQUESTIONMESSAGE.MESSAGE_ID;
    }

    @Override
    public String component1() {
        return getGuildId();
    }

    @Override
    public String component2() {
        return getMessageId();
    }

    @Override
    public String value1() {
        return getGuildId();
    }

    @Override
    public String value2() {
        return getMessageId();
    }

    @Override
    public ActivequestionmessageRecord value1(String value) {
        setGuildId(value);
        return this;
    }

    @Override
    public ActivequestionmessageRecord value2(String value) {
        setMessageId(value);
        return this;
    }

    @Override
    public ActivequestionmessageRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ActivequestionmessageRecord
     */
    public ActivequestionmessageRecord() {
        super(Activequestionmessage.ACTIVEQUESTIONMESSAGE);
    }

    /**
     * Create a detached, initialised ActivequestionmessageRecord
     */
    public ActivequestionmessageRecord(String guildId, String messageId) {
        super(Activequestionmessage.ACTIVEQUESTIONMESSAGE);

        setGuildId(guildId);
        setMessageId(messageId);
    }

    /**
     * Create a detached, initialised ActivequestionmessageRecord
     */
    public ActivequestionmessageRecord(io.github.org.programming.jooq.tables.pojos.Activequestionmessage value) {
        super(Activequestionmessage.ACTIVEQUESTIONMESSAGE);

        if (value != null) {
            setGuildId(value.getGuildId());
            setMessageId(value.getMessageId());
        }
    }
}
