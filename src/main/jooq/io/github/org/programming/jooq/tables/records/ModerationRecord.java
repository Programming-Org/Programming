/*
 * This file is generated by jOOQ.
 */
package io.github.org.programming.jooq.tables.records;


import io.github.org.programming.jooq.tables.Moderation;

import java.time.Instant;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModerationRecord extends UpdatableRecordImpl<ModerationRecord> implements Record8<Integer, String, String, String, Instant, Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.moderation.id</code>.
     */
    public ModerationRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.moderation.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.moderation.guild_id</code>.
     */
    public ModerationRecord setGuildId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.moderation.guild_id</code>.
     */
    public String getGuildId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.moderation.user_id</code>.
     */
    public ModerationRecord setUserId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.moderation.user_id</code>.
     */
    public String getUserId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.moderation.moderator_id</code>.
     */
    public ModerationRecord setModeratorId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.moderation.moderator_id</code>.
     */
    public String getModeratorId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.moderation.time_stamp</code>.
     */
    public ModerationRecord setTimeStamp(Instant value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.moderation.time_stamp</code>.
     */
    public Instant getTimeStamp() {
        return (Instant) get(4);
    }

    /**
     * Setter for <code>public.moderation.amount_of_warnings</code>.
     */
    public ModerationRecord setAmountOfWarnings(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.moderation.amount_of_warnings</code>.
     */
    public Integer getAmountOfWarnings() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.moderation.reason</code>.
     */
    public ModerationRecord setReason(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.moderation.reason</code>.
     */
    public String getReason() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.moderation.type</code>.
     */
    public ModerationRecord setType(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.moderation.type</code>.
     */
    public String getType() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, Instant, Integer, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, String, Instant, Integer, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Moderation.MODERATION.ID;
    }

    @Override
    public Field<String> field2() {
        return Moderation.MODERATION.GUILD_ID;
    }

    @Override
    public Field<String> field3() {
        return Moderation.MODERATION.USER_ID;
    }

    @Override
    public Field<String> field4() {
        return Moderation.MODERATION.MODERATOR_ID;
    }

    @Override
    public Field<Instant> field5() {
        return Moderation.MODERATION.TIME_STAMP;
    }

    @Override
    public Field<Integer> field6() {
        return Moderation.MODERATION.AMOUNT_OF_WARNINGS;
    }

    @Override
    public Field<String> field7() {
        return Moderation.MODERATION.REASON;
    }

    @Override
    public Field<String> field8() {
        return Moderation.MODERATION.TYPE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getGuildId();
    }

    @Override
    public String component3() {
        return getUserId();
    }

    @Override
    public String component4() {
        return getModeratorId();
    }

    @Override
    public Instant component5() {
        return getTimeStamp();
    }

    @Override
    public Integer component6() {
        return getAmountOfWarnings();
    }

    @Override
    public String component7() {
        return getReason();
    }

    @Override
    public String component8() {
        return getType();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getGuildId();
    }

    @Override
    public String value3() {
        return getUserId();
    }

    @Override
    public String value4() {
        return getModeratorId();
    }

    @Override
    public Instant value5() {
        return getTimeStamp();
    }

    @Override
    public Integer value6() {
        return getAmountOfWarnings();
    }

    @Override
    public String value7() {
        return getReason();
    }

    @Override
    public String value8() {
        return getType();
    }

    @Override
    public ModerationRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ModerationRecord value2(String value) {
        setGuildId(value);
        return this;
    }

    @Override
    public ModerationRecord value3(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public ModerationRecord value4(String value) {
        setModeratorId(value);
        return this;
    }

    @Override
    public ModerationRecord value5(Instant value) {
        setTimeStamp(value);
        return this;
    }

    @Override
    public ModerationRecord value6(Integer value) {
        setAmountOfWarnings(value);
        return this;
    }

    @Override
    public ModerationRecord value7(String value) {
        setReason(value);
        return this;
    }

    @Override
    public ModerationRecord value8(String value) {
        setType(value);
        return this;
    }

    @Override
    public ModerationRecord values(Integer value1, String value2, String value3, String value4, Instant value5, Integer value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ModerationRecord
     */
    public ModerationRecord() {
        super(Moderation.MODERATION);
    }

    /**
     * Create a detached, initialised ModerationRecord
     */
    public ModerationRecord(Integer id, String guildId, String userId, String moderatorId, Instant timeStamp, Integer amountOfWarnings, String reason, String type) {
        super(Moderation.MODERATION);

        setId(id);
        setGuildId(guildId);
        setUserId(userId);
        setModeratorId(moderatorId);
        setTimeStamp(timeStamp);
        setAmountOfWarnings(amountOfWarnings);
        setReason(reason);
        setType(type);
    }

    /**
     * Create a detached, initialised ModerationRecord
     */
    public ModerationRecord(io.github.org.programming.jooq.tables.pojos.Moderation value) {
        super(Moderation.MODERATION);

        if (value != null) {
            setId(value.getId());
            setGuildId(value.getGuildId());
            setUserId(value.getUserId());
            setModeratorId(value.getModeratorId());
            setTimeStamp(value.getTimeStamp());
            setAmountOfWarnings(value.getAmountOfWarnings());
            setReason(value.getReason());
            setType(value.getType());
        }
    }
}
